装饰模式：
    动态地给一个对象添加一些额外的职责。 就增加功能来说，装饰模式相比生成子类更为灵活。

基本组件：基础父类 父类的子类  基础装饰器类 具体的装饰器
        基础父类：定义一个类的基本属性和方法，可以是抽象方法
        父类的子类：继承或实现基础父类，定义具体的属性和方法
        基础装饰器类：继承或者实现基础父类，在它的属性里必然有一个private变量指向基础组件，实现的抽象方法也由这个基础组件完成
        具体的装饰器：继承或者事件基础装饰器类，重写需要自己装饰的方法，方法内部可以在父类的方法前后添加自己的行为
这样客户端要是想要装饰方法，就可以先new基础子类，再new具体的装饰器，并将基础子类传递给这个装饰器

装饰类和被装饰类可以独立发展，而不会相互耦合。换句话说，Component类无须知 道Decorator类，Decorator类是从外部来扩展Component类的功能，而Decorator也不用知道具体的构件。
装饰模式是继承关系的一个替代方案。我们看装饰类Decorator，不管装饰多少层，返 回的对象还是Component，实现的还是is-a的关系